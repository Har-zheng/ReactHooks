diff a/src/index/App.jsx b/src/index/App.jsx	(rejected hunks)
@@ -1,2 +1,2 @@
-import {connect} from "react-redux";
-import React, {useCallback, useMemo} from "react";
+import { connect } from "react-redux";
+import React, { useCallback, useMemo } from "react";
@@ -4 +4 @@ import "./App.css";
-import {bindActionCreators} from "redux";
+import { bindActionCreators } from "redux";
@@ -13 +13,7 @@ import CitySelector from "../common/CitySelector";
-import {exchangeFromTo, showCitySelector, hideCitySelector, fetchCityData ,setSelectedCity} from "./actions";
+import {
+  exchangeFromTo,
+  showCitySelector,
+  hideCitySelector,
+  fetchCityData,
+  setSelectedCity
+} from "./actions";
@@ -16,17 +22,17 @@ function App(props) {
-    const {
-        from,
-        to,
-        dispatch,
-        isCitySelectorVisible,
-        cityData,
-        isLoadingCityData
-    } = props;
-    const onBack = useCallback(() => {
-        window.history.back();
-    }, []);
-    const doExchangeFromTo = useCallback(() => {
-        dispatch(exchangeFromTo());
-    }, []);
-    const doShowCitySelector = useCallback(m => {
-        dispatch(showCitySelector(m));
-    }, []);
+  const {
+    from,
+    to,
+    dispatch,
+    isCitySelectorVisible,
+    cityData,
+    isLoadingCityData
+  } = props;
+  const onBack = useCallback(() => {
+    window.history.back();
+  }, []);
+  const doExchangeFromTo = useCallback(() => {
+    dispatch(exchangeFromTo());
+  }, []);
+  const doShowCitySelector = useCallback(m => {
+    dispatch(showCitySelector(m));
+  }, []);
@@ -34,34 +40,8 @@ function App(props) {
-    const citySelectorCbs = useMemo(() => {
-        return bindActionCreators({
-            onBack: hideCitySelector,
-            fetchCityData,
-            onSelect: setSelectedCity
-        }, dispatch)
-    }, [])
-    const cbs = useMemo(() => {
-        return bindActionCreators(
-            {
-                exchangeFromTo,
-                showCitySelector
-            },
-            dispatch
-        );
-    }, []);
-    return (
-        <div>
-            <div className="header-weapper">
-                <Header title="火车票" onBack={onBack}></Header>
-            </div>
-            <form className="form">
-                <Journey from={from} to={to} {...cbs} />
-                <DeparDate/>
-                <HighSpeed/>
-                <Submit/>
-            </form>
-            <CitySelector
-                show={isCitySelectorVisible}
-                cityData={cityData}
-                isLoading={isLoadingCityData}
-                {...citySelectorCbs}
-            />
-        </div>
+  const citySelectorCbs = useMemo(() => {
+    return bindActionCreators(
+      {
+        onBack: hideCitySelector,
+        fetchCityData,
+        onSelect: setSelectedCity
+      },
+      dispatch
@@ -72,6 +81,6 @@ export default connect(
-    function mapStateToProps(state) {
-        return state;
-    },
-    function mapDispatchToProps(dispatch) {
-        return {dispatch};
-    }
+  function mapStateToProps(state) {
+    return state;
+  },
+  function mapDispatchToProps(dispatch) {
+    return { dispatch };
+  }
